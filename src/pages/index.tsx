import { ApolloClient, InMemoryCache, ApolloProvider } from "@apollo/client";
import Head from "next/head";
import Hoge from "../components/Hoge";
import { hogeQuery } from "../constants";

export default function Home() {
  const headers = {
    apikey: `${process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY}`,
    authorization: `Bearer ${process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY}`,
  };

  const client = new ApolloClient({
    uri: `${process.env.NEXT_PUBLIC_SUPABASE_URL}/graphql/v1`,
    cache: new InMemoryCache(),
    headers,
  });

  client
    .query({ query: hogeQuery })
    .then((result) =>
      console.log(
        result.data.hogeCollection!.edges.map((item: any) => item.node.name)
      )
    );
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <ApolloProvider client={client}>
          <Hoge />
        </ApolloProvider>
      </main>
    </>
  );
}
